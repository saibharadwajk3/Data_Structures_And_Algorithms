HEAPSORT;
import java.util.*;
public class HeapSort  
{ 
void Heapsort(int [] A){
    

//firstly you need to build heap out of given array
int n=A.length;
for(int i=(n/2)-1;i>=0;i--){
    heapify(A,n,i);
}

    
//after building heap ,swap last and frst elements and heapify again  (get max)   

for(int i=n-1;i>0;i--){
    int temp=A[0];
    A[0]=A[i];
    A[i]=temp;
    heapify(A,i,0);
}
    
}   
    
    
    public void heapify(int [] arr,int n,int i){
        int largest=i;
        int li=2*i+1;
        int ri=2*i+2;
        
        if(li<n&&arr[li]>arr[largest]){
            largest=li;
        }
        
        
        if(ri<n&&arr[ri]>arr[largest]){
            largest=ri;
        }
        
        if(largest!=i){
            int temp=arr[i];
            arr[i]=arr[largest];
            arr[largest]=temp;
            heapify(arr,n,largest);
        }
        
    }
public static void main(String args[])  
{  
int arr[] = {90,23,101,45,65,23,67,89,34,23};  
HeapSort ob = new HeapSort();  
ob.Heapsort(arr);  

System.out.println(Arrays.toString(arr));
  

}  
}